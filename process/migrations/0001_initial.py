# Generated by Django 4.2.7 on 2023-11-03 06:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('initialized', 'initialized'), ('finished', 'finished'), ('cancelled', 'cancelled'), ('error', 'error')], db_index=True, default='initialized', max_length=20, verbose_name='status')),
                ('dt_start', models.DateTimeField(auto_now_add=True, null=True, verbose_name='start date')),
                ('dt_end', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('observations', models.CharField(blank=True, max_length=500, null=True, verbose_name='observations')),
            ],
            options={
                'verbose_name': 'job',
                'verbose_name_plural': 'jobs',
                'db_table': 'pr_jobs',
                'ordering': ['-id'],
                'permissions': (('view_jobs', 'Can view job executions'), ('run_jobs', 'Can run job'), ('cancel_jobs', 'Can cancel job')),
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='name')),
                ('description', models.CharField(max_length=200, unique=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('run_if_err', models.BooleanField(default=False, verbose_name='run again if previously execution status is error')),
                ('run_overlap', models.BooleanField(default=False, verbose_name='run if previous still is executing')),
                ('minute', models.CharField(max_length=50, verbose_name='minute')),
                ('hour', models.CharField(max_length=50, verbose_name='hour')),
                ('day_of_month', models.CharField(max_length=50, verbose_name='day of month')),
                ('month', models.CharField(max_length=50, verbose_name='month')),
                ('day_of_week', models.CharField(max_length=50, verbose_name='day of week')),
                ('chart_height', models.PositiveIntegerField(default=0, verbose_name='chart height')),
            ],
            options={
                'verbose_name': 'process',
                'verbose_name_plural': 'processes',
                'db_table': 'pr_processes',
                'ordering': ['-id'],
                'permissions': (('view_processes', 'Can view processes'), ('manage_processes', 'Can manage processes')),
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.CharField(max_length=500, unique=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='diagram level')),
                ('offset', models.CharField(default='0%', max_length=5, validators=[django.core.validators.RegexValidator('^-?[0-9]{0,3}%$', 'wrong value for offset it mus be positive 1% or negative -1% max 3 digits')], verbose_name='diagram offset')),
                ('interpreter', models.CharField(blank=True, max_length=50, null=True, verbose_name='interpreter')),
                ('arguments', models.CharField(blank=True, max_length=500, null=True, verbose_name='arguments')),
                ('code', models.FileField(upload_to='dj_process_tasks/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['py', 'sh', 'pl'])], verbose_name='code file')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='process.process', verbose_name='process')),
            ],
            options={
                'verbose_name': 'task',
                'verbose_name_plural': 'tasks',
                'db_table': 'pr_tasks',
                'ordering': ['-id'],
                'permissions': (('view_tasks', 'Can view tasks'), ('manage_tasks', 'Can manage tasks')),
            },
        ),
        migrations.CreateModel(
            name='JobTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('awaiting', 'awaiting'), ('initialized', 'initialized'), ('finished', 'finished'), ('cancelled', 'cancelled'), ('reopened', 'reopened'), ('forced', 'forced'), ('retry', 'retry'), ('error', 'error')], db_index=True, default='awaiting', max_length=20, verbose_name='status')),
                ('pid', models.PositiveIntegerField(db_index=True, default=0, verbose_name='pid')),
                ('dt_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created date')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='start date')),
                ('dt_end', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='observations')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='process.job', verbose_name='job')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='process.task', verbose_name='task')),
            ],
            options={
                'verbose_name': 'task instance',
                'verbose_name_plural': 'task instances',
                'db_table': 'pr_job_tasks',
                'ordering': ['-id'],
                'permissions': (('view_job_tasks', 'Can view tasks executions'), ('manage_job_tasks', 'Can manage tasks executions')),
            },
        ),
        migrations.AddField(
            model_name='job',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='process.process', verbose_name='process'),
        ),
        migrations.CreateModel(
            name='TaskDependence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='process.task', verbose_name='parent task')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='process.task', verbose_name='child task')),
            ],
            options={
                'verbose_name': 'task dependence',
                'verbose_name_plural': 'task dependencies',
                'db_table': 'pr_task_dependencies',
                'ordering': ['-id'],
                'permissions': (('view_tasks_dependencies', 'Can view tasks dependencies'),),
                'unique_together': {('parent', 'task')},
            },
        ),
    ]
